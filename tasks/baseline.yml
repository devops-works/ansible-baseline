---
- name: Creates __all_users fact containing declared users + root
  ansible.builtin.set_fact:
    __all_users: "{{ [ { 'name': 'root' } ] | community.general.lists_mergeby(baseline_users, 'name') | flatten }}"

- name: Adds baseline packages
  ansible.builtin.apt:
    pkg: "{{ baseline_packages }}"
    state: present
  tags: ["packages"]

- name: Adds requested additional packages
  ansible.builtin.apt:
    pkg: "{{ baseline_packages_addons }}"
    state: present
  tags: ["packages"]

- name: Adds distribution specific packages 
  ansible.builtin.apt:
    pkg: "{{ item.value }}"
    state: present
  when: ansible_distribution | lower == item.key
  loop: "{{ baseline_distribution_specific |dict2items }}"
  tags: ["packages"]

- name: Adds sudo package 
  ansible.builtin.apt:
    pkg: sudo
    state: present
  tags: ["packages", "sudo"]

- name: Changes TZ
  ansible.builtin.file:
    state: link
    src: "/usr/share/zoneinfo/{{ baseline_tz }}"
    dest: /etc/localtime
    force: yes
  tags: ["tz", "baseline:tz"]
  notify:
    - Restart rsyslogd

- name: Creates required groups
  ansible.builtin.group:
    name: "{{ item.group | default(item.name) }}"
  loop: "{{ baseline_users }}"

- name: Creates base users
  ansible.builtin.user:
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    group: "{{ item.group | default(item.name) }}"
    groups: "{{ item.groups | default([]) | union([item.group | default(item.name)]) | unique }}"
    append: yes
    shell: /bin/bash
    update_password: on_create
  loop: "{{ baseline_users }}"

- name: Adds bash dotfile setup
  ansible.builtin.file:
    state: directory
    dest: "{{'~' + item.name }}/.bash.d/"
    mode: 0770
    owner: "{{ item.name }}"
    group: "{{ item.group | default(item.name) }}"
  loop: "{{ __all_users }}"

  # with_flattened:
  #   - [ { name: 'root' } ]
  #   - [ "{{ baseline_users }}" ]

- name: Adds .bashrc
  ansible.builtin.template:
    src: bashrc.j2
    dest: "{{'~' + item.name }}/.bashrc"
    mode: 0750
    owner: "{{ item.name }}"
    group: "{{ item.group | default(item.name) }}"
  loop: "{{ __all_users }}"

- name: Adds 10_prompt.bash
  ansible.builtin.template:
    src: 10_prompt.bash.j2
    dest: "{{'~' + item.name }}/.bash.d/10_prompt.bash"
    mode: 0750
    owner: "{{ item.name }}"
    group: "{{ item.group | default(item.name) }}"
  loop: "{{ __all_users }}"

- name: Adds .vimrc
  ansible.builtin.template:
    src: vimrc.j2
    dest: "{{'~' + item.name }}/.vimrc"
    mode: 0750
    owner: "{{ item.name }}"
    group: "{{ item.group | default(item.name) }}"
  loop: "{{ __all_users }}"

- name: Adds proper file limits
  ansible.builtin.template:
    src: limits-file.conf.j2
    dest: /etc/security/limits.d/filemax.conf

- name: Adds passwordless sudo capability if needed
  ansible.builtin.template:
    src: passwordless_sudo.j2
    dest: /etc/sudoers.d/{{ item.name }}
  loop: "{{ baseline_users }}"
  when: "'passwordless_sudo' in item and item.passwordless_sudo"
  tags: ["sudo"]

- name: Removes passwordless sudo capability if not needed
  ansible.builtin.file:
    path: /etc/sudoers.d/{{ item.name }}
    state: absent
  loop: "{{ baseline_users }}"
  when: "'passwordless_sudo' not in item or not item.passwordless_sudo"
  tags: ["sudo"]
